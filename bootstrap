#!/bin/sh

set -e

usage() {
  cat <<EOF
$0 -x <cross prefix> -r <rootfs prefix>

Example:

    $0 -x /tmp/xunil-cross -r /tmp/xunil-rootfs
EOF
  exit 1
}

reqs() {
  local b
  local missing

  for b in cc c++ make patch tar xz curl perl file m4; do
    which $b >/dev/null 2>&1 || missing="$missing $b"
  done

  if [ "$missing" ]; then
    printf "need '%s'\n" $missing
    exit 1
  fi
}

build_gcc() {
  local name=$1
  local prefix=$2

  ./mk extract $name

  local dep dest
  for dep in gmp mpfr mpc; do
    ./mk extract $dep
    dest=$(./mk query $name MK_SRC)/$dep
    [ -h $dest ] || ln -s $(./mk query $dep MK_SRC) $dest
  done

  MK_PREFIX=$prefix \
  MK_CONFIGURE="
    --prefix=$prefix
    --target=$TRIPLE" \
  MK_DESTDIR=no \
    ./mk install $name
}

cross() {
  local prefix=$CROSS_PREFIX/$TRIPLE

  if ! [ -e $prefix/$TRIPLE/usr ]; then
    mkdir -p $prefix/$TRIPLE
    ln -s . $prefix/$TRIPLE/usr
  fi

  if ! [ -x $prefix/bin/$TRIPLE-ar ]; then
    MK_PREFIX=$prefix \
    MK_CONFIGURE="
      --prefix=$prefix
      --target=$TRIPLE" \
    MK_DESTDIR=no \
      ./mk install bootstrap-binutils
  fi

  if ! [ -x $prefix/bin/$TRIPLE-gcc ]; then
    build_gcc bootstrap-gcc-1 $prefix
  fi

  if ! [ -e $prefix/$TRIPLE/include/linux/inotify.h ]; then
    MK_DESTDIR=$prefix \
    MK_PREFIX=$TRIPLE \
      ./mk install bootstrap-linux-headers
  fi

  if ! [ -e $prefix/$TRIPLE/include/stdio.h ]; then
    MK_PREFIX=$prefix/$TRIPLE \
    CROSS_COMPILE=$TRIPLE- \
    CC=$TRIPLE-gcc \
    MK_CONFIGURE="--prefix=$prefix/$TRIPLE" \
    MK_DESTDIR=no \
      ./mk install bootstrap-musl
  fi

  if ! [ -x $prefix/bin/$TRIPLE-g++ ]; then
    build_gcc bootstrap-gcc-2 $prefix
  fi

  if ! [ -x $prefix/bin/pkg-contain ]; then
    MK_PREFIX=$prefix \
    MK_DESTDIR=no \
      ./mk install bootstrap-pkg
  fi
}

rootfs_install() {
  local name=$1

  tar -C $ROOTFS_PREFIX -xJf repo/$(./mk query $name fullname).tar.xz
}

rootfs() {
  local prefix=$ROOTFS_PREFIX/usr

  export CC=$TRIPLE-gcc
  export CXX=$TRIPLE-g++
  export AR=$TRIPLE-ar
  export AS=$TRIPLE-as
  export LD=$TRIPLE-ld
  export RANLIB=$TRIPLE-ranlib
  export READELF=$TRIPLE-readelf
  export STRIP=$TRIPLE-strip

  ./mk pkg musl
  if ! [ -e $prefix/include/stdio.h ]; then
    rootfs_install musl
  fi

  CROSS_COMPILE=$TRIPLE- \
    ./mk pkg busybox
  if ! [ -x $ROOTFS_PREFIX/bin/busybox ]; then
    rootfs_install busybox
  fi

  MK_CONFIGURE="
    --host=$TRIPLE
    --prefix=/usr" \
    ./mk pkg binutils
  if ! [ -x $ROOTFS_PREFIX/usr/bin/ar ]; then
    rootfs_install binutils
  fi

  MK_CONFIGURE="
    --host=$TRIPLE
    --prefix=/usr" \
    ./mk pkg gmp
  if ! [ -e $ROOTFS_PREFIX/usr/lib/libgmp.so ]; then
    rootfs_install gmp
  fi

  MK_CONFIGURE="
    --host=$TRIPLE
    --prefix=/usr
    --with-gmp=$prefix" \
    ./mk pkg mpfr
  if ! [ -e $ROOTFS_PREFIX/usr/lib/libmpfr.so ]; then
    rootfs_install mpfr
  fi

  MK_CONFIGURE="
    --host=$TRIPLE
    --prefix=/usr
    --with-gmp=$prefix
    --with-mpfr=$prefix" \
    ./mk pkg mpc
  if ! [ -e $ROOTFS_PREFIX/usr/lib/libmpc.so ]; then
    rootfs_install mpc
  fi

  MK_CONFIGURE="
    --host=$TRIPLE
    --target=$TRIPLE
    --prefix=/usr
    --with-gmp=$prefix
    --with-mpfr=$prefix
    --with-mpc=$prefix" \
    ./mk pkg gcc
  if ! [ -x $ROOTFS_PREFIX/usr/bin/gcc ]; then
    rootfs_install gcc
  fi

  local bin
  for bin in make xz file; do
    MK_CONFIGURE="
      --host=$TRIPLE
      --prefix=/usr" \
      ./mk pkg $bin
    if ! [ -x $ROOTFS_PREFIX/usr/bin/$bin ]; then
      rootfs_install $bin
    fi
  done

  ./mk pkg hier
  if ! [ -d $ROOTFS_PREFIX/dev ]; then
    rootfs_install hier
  fi
}

contain() {
  env -i PATH="/usr/bin:/usr/sbin:/bin:/sbin" HOSTDIR=$(pwd) \
    $CROSS_PREFIX/$TRIPLE/bin/pkg-contain $ROOTFS_PREFIX /bin/sh
}

while getopts "r:x:h" opt; do
  case $opt in
    x)
      CROSS_PREFIX=$OPTARG
      ;;
    r)
      ROOTFS_PREFIX=$OPTARG
      ;;
    h)
      usage
      ;;
  esac
done
unset opt

[ "$CROSS_PREFIX" ] || usage
[ "$ROOTFS_PREFIX" ] || usage

mkdir -p $CROSS_PREFIX $ROOTFS_PREFIX

TRIPLE=$(uname -m)-linux-musl

PATH=$CROSS_PREFIX/$TRIPLE/bin:$PATH

reqs
cross
rootfs
contain
