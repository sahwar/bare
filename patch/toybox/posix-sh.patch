diff --git a/scripts/bloatcheck b/scripts/bloatcheck
index fff4690f3e31..183b03165c03 100755
--- a/scripts/bloatcheck
+++ b/scripts/bloatcheck
@@ -1,4 +1,4 @@
-#!/bin/bash
+#!/bin/sh
 
 if [ $# -ne 2 ]
 then
diff --git a/scripts/findglobals.sh b/scripts/findglobals.sh
index 2c63164be832..9455bc6119f0 100755
--- a/scripts/findglobals.sh
+++ b/scripts/findglobals.sh
@@ -1,4 +1,4 @@
-#!/bin/bash
+#!/bin/sh
 
 # Quick and dirty check to see if anybody's leaked global variables.
 # We should have this, toy_list, toybuf, and toys.
diff --git a/scripts/install.sh b/scripts/install.sh
index 8891a314f64a..4068901a1fa4 100755
--- a/scripts/install.sh
+++ b/scripts/install.sh
@@ -1,4 +1,4 @@
-#!/bin/bash
+#!/bin/sh
 
 # Grab default values for $CFLAGS and such.
 
@@ -2,7 +2,7 @@
 
 # Grab default values for $CFLAGS and such.
 
-source ./configure
+. ./configure
 
 # Parse command line arguments.
 
@@ -13,19 +13,19 @@ while [ ! -z "$1" ]
 do
   # Create symlinks instead of hardlinks?
 
-  [ "$1" == "--symlink" ] && LINK_TYPE="-s"
+  [ "$1" = "--symlink" ] && LINK_TYPE="-s"
 
   # Uninstall?
 
-  [ "$1" == "--uninstall" ] && UNINSTALL=1
+  [ "$1" = "--uninstall" ] && UNINSTALL=1
 
   # Delete destination command if it exists?
 
-  [ "$1" == "--force" ] && DO_FORCE="-f"
+  [ "$1" = "--force" ] && DO_FORCE="-f"
 
   # Use {,usr}/{bin,sbin} paths instead of all files in one directory?
 
-  if [ "$1" == "--long" ]
+  if [ "$1" = "--long" ]
   then
     LONG_PATH="bin/"
   fi
diff --git a/scripts/make.sh b/scripts/make.sh
index dab520611ffd..0c11770f37e3 100755
--- a/scripts/make.sh
+++ b/scripts/make.sh
@@ -4,8 +4,7 @@
 
 export LANG=c
 export LC_ALL=C
-set -o pipefail
-source ./configure
+. ./configure
 
 [ -z "$KCONFIG_CONFIG" ] && KCONFIG_CONFIG=".config"
 
@@ -85,7 +85,7 @@ do
 
   echo "#define NEWTOY(aa,bb,cc) aa $I bb"
   echo '#define OLDTOY(...)'
-  if [ "$I" == A ]
+  if [ "$I" = A ]
   then
     cat generated/config.h
   else
@@ -113,7 +113,7 @@ generated/mkflags > generated/flags.h || exit 1
 
 # Extract global structure definitions and flag definitions from toys/*/*.c
 
-function getglobals()
+getglobals()
 {
   for i in toys/*/*.c
   do
@@ -197,7 +197,7 @@ for i in $FILES
 do
   # build each generated/obj/*.o file in parallel
 
-  X=${i/lib\//lib_}
+  X=$(echo $i | sed 's#lib/#lib_#')
   X=${X##*/}
   do_loudly $BUILD -c $i -o generated/obj/${X%%.c}.o &
 
@@ -205,7 +205,7 @@ do
 
   while true
   do
-    PENDING="$(echo $PENDING $(jobs -rp) | tr ' ' '\n' | sort -u)"
+    PENDING="$(echo $PENDING $(jobs -p) | tr ' ' '\n' | sort -u)"
     [ $(echo -n "$PENDING" | wc -l) -lt "$CPUS" ] && break;
 
     wait $(echo "$PENDING" | head -n 1) || exit 1
diff --git a/scripts/minicom.sh b/scripts/minicom.sh
index 1a9b0d861718..9bce148b6b02 100755
--- a/scripts/minicom.sh
+++ b/scripts/minicom.sh
@@ -1,4 +1,4 @@
-#!/bin/bash
+#!/bin/sh
 
 # If you want to use toybox netcat to talk to a serial port, use this.
 
diff --git a/scripts/single.sh b/scripts/single.sh
index c6416a35963c..05b589c9cfec 100755
--- a/scripts/single.sh
+++ b/scripts/single.sh
@@ -1,4 +1,4 @@
-#!/bin/bash
+#!/bin/sh
 
 # Build a standalone toybox command
 
diff --git a/scripts/test.sh b/scripts/test.sh
index 81d9f346d087..7557653ffb20 100755
--- a/scripts/test.sh
+++ b/scripts/test.sh
@@ -1,4 +1,4 @@
-#!/bin/bash
+#!/bin/sh
 
 [ -z "$TOPDIR" ] && TOPDIR="$(pwd)"
 
diff --git a/scripts/genconfig.sh b/scripts/genconfig.sh
index e59aa3921fb5..58fb458b814c 100755
--- a/scripts/genconfig.sh
+++ b/scripts/genconfig.sh
@@ -1,11 +1,11 @@
-#!/bin/bash
+#!/bin/sh
 
 # This has to be a separate file from scripts/make.sh so it can be called
 # before menuconfig.  (It's called again from scripts/make.sh just to be sure.)
 
 mkdir -p generated
 
-source configure
+. ./configure
 
 # Probe for a single config symbol with a "compiles or not" test.
 # Symbol name is first argument, flags second, feed C file to stdin
